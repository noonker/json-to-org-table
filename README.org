#+TITLE: json-to-org-table

* Overview

=json-to-org-table= is an elisp function to turn json strings org tables while maintaining the linkage of nested structures.

This was created to two primary use cases:
 - Human readability of API results
 - Exportablity of API results

* Use
Use it by calling
#+begin_src emacs-lisp
(json-to-org-table-parse-json-string <some json string>)
(json-to-org-table-parse-json <Emacs json object>)
#+end_src

Example:
#+begin_src emacs-lisp
(json-to-org-table-parse-json-string "{\"glossary\": {\"title\": \"example glossary\",\"GlossDiv\": {\"title\": \"S\",\"GlossList\": {\"GlossEntry\": {\"ID\": \"SGML\",\"SortAs\": \"SGML\",\"GlossTerm\": \"Standard Generalized Markup Language\",\"Acronym\": \"SGML\",\"Abbrev\": \"ISO 8879:1986\",\"GlossDef\": {\"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\"GlossSeeAlso\": [\"GML\", \"XML\"]},\"GlossSee\": \"markup\"}}}}}")
#+end_src

#+begin_src org
| key      | value    |
|----------+----------|
| glossary | [[glossary]] |

,#+name: glossary
| key      | value             |
|----------+-------------------|
| title    | example glossary  |
| GlossDiv | [[GlossDiv_glossary]] |

,#+name: GlossDiv_glossary
| key       | value                       |
|-----------+-----------------------------|
| title     | S                           |
| GlossList | [[GlossList_GlossDiv_glossary]] |

,#+name: GlossList_GlossDiv_glossary
| key        | value                                  |
|------------+----------------------------------------|
| GlossEntry | [[GlossEntry_GlossList_GlossDiv_glossary]] |

,#+name: GlossEntry_GlossList_GlossDiv_glossary
| key       | value                                           |
|-----------+-------------------------------------------------|
| ID        | SGML                                            |
| SortAs    | SGML                                            |
| GlossTerm | Standard Generalized Markup Language            |
| Acronym   | SGML                                            |
| Abbrev    | ISO 8879:1986                                   |
| GlossDef  | [[GlossDef_GlossEntry_GlossList_GlossDiv_glossary]] |
| GlossSee  | markup                                          |

,#+name: GlossDef_GlossEntry_GlossList_GlossDiv_glossary
| key          | value                                                                    |
|--------------+--------------------------------------------------------------------------|
| para         | A meta-markup language, used to create markup languages such as DocBook. |
| GlossSeeAlso | [[GlossSeeAlso_GlossDef_GlossEntry_GlossList_GlossDiv_glossary]]             |

,#+name: GlossSeeAlso_GlossDef_GlossEntry_GlossList_GlossDiv_glossary
| GlossSeeAlso_GlossDef_GlossEntry_GlossList_GlossDiv_glossary |
|--------------------------------------------------------------|
| GML                                                          |
| XML                                                          |
#+end_src


* Structures
** Hashmap
Json
#+begin_src json
{"Celestial Body": "Luna",
 "Inhabitantants": "Loonies",
 "Government": null }
#+end_src

...becomes
#+begin_src org
| key            | value   |
|----------------+---------|
| Celestial Body | Luna    |
| Inhabitants    | Loonies |
| Government     |         |
#+end_src

** List of Hashmaps
json
#+begin_src json
[{"type": "human", "name": "Manuel", "nickname": "Mannie"},
 {"type": "AI", "name": "HOLMES IV", "nickname": "Mike"},
 {"type": "human", "name": "Bernardo de la Paz", "nickname": "The Professor"}]
#+end_src

...becomes
#+begin_src org
| type  | name               | nickname      |
|-------+--------------------+---------------|
| human | Manuel             | Mannie        |
| AI    | HOLMES IV          | Mike          |
| human | Bernardo de la Paz | The Professor |

#+end_src

** A List of Lists
json
#+begin_src json
[[3345246207 "launch" "hit"],
 [3345286207 "launch" "critical hit"],
 [3345946207 "launch" "hit"]]
#+end_src

...becomes
#+begin_src org
| 3345246207 | launch | hit          |
| 3345286207 | launch | critical hit |
| 3345946207 | launch | hit          |
#+end_src

** A List of none of the above
json
#+begin_src json
["The Dinkum Thinkum", "A Rabble in Arms", "TANSTAAFL"]
#+end_src

...becomes
#+begin_src org
| The Dinkum Thinkum |
| A Rabble in Arms   |
| TANSTAAFL          |
#+end_src

** The linkages are maintained between nested objects
json
#+begin_src json
{"genre": "Science Fiction",
 "author": "Robert Heinlein",
 "main-characters": ["Mannie",
                     "Wyoh",
                     "Professor Bernardo de la Paz",
                     "Mike",
                     "Stu",
                     "Hazel Meade"]}
#+end_src

...becomes
#+begin_src org
| genre           | Science Fiction |
| author          | Robert Heinlein |
| main-characters | [[characters]]  |

,#+name: characters
| characters                   |
|------------------------------|
| Mannie                       |
| Wyoh                         |
| Professor Bernardo de la Paz |
| Mike                         |
| Stu                          |
| Hazel Meade                  |
#+end_src


* WIP
Org bable post processing with =json-to-org-table=

#+begin_src org
,#+name: requester
,#+begin_src bash :results drawer
curl -XGET https://jsonplaceholder.typicode.com/posts/1
,#+end_src

,#+RESULTS: requester
:results:
{
  "userId": 1,
  "id": 1,
  "title": "sunt aut facere repellat provident occaecati excepturi optio reprehenderit",
  "body": "quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto"
}
:end:

,#+name: to-json-table
,#+begin_src emacs-lisp :var str=requester() :results raw
(json-to-org-table-parse-json-string str)
,#+end_src

,#+RESULTS: to-json-table
| key    | value                                                                                                                                                       |
|--------+-------------------------------------------------------------------------------------------------------------------------------------------------------------|
| userId | 1                                                                                                                                                           |
| id     | 1                                                                                                                                                           |
| title  | sunt aut facere repellat provident occaecati excepturi optio reprehenderit                                                                                  |
| body   | quia et suscipitsuscipit recusandae consequuntur expedita et cumreprehenderit molestiae ut ut quas totamnostrum rerum est autem sunt rem eveniet architecto |

#+end_src
